<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>client</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>io.undertree.boot-ng</groupId>
    <artifactId>spring-boot-ng</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <name>Angular Client</name>

  <properties>
    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
    <frontend-maven-plugin.version>1.8.0</frontend-maven-plugin.version>
    <nodejs.version>v10.16.3</nodejs.version>
    <yarn.version>v1.17.3</yarn.version>
    <outDir>dist</outDir>
  </properties>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${outDir}</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <configuration>
          <nodeVersion>${nodejs.version}</nodeVersion>
          <yarnVersion>${yarn.version}</yarnVersion>
        </configuration>
        <executions>
          <!-- ...if you want to use yarn instead
          <execution>
            <id>install node and yarn</id>
            <goals>
              <goal>install-node-and-yarn</goal>
              <goal>yarn</goal>
            </goals>
          </execution>
          -->
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
              <goal>npm</goal>
            </goals>
          </execution>
          <!-- -->
          <execution>
            <id>ng lint</id>
            <phase>compile</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run lint</arguments>
            </configuration>
          </execution>
          <!-- -->
          <execution>
            <id>ng build</id>
            <phase>compile</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>${ng.build.arguments}</arguments>
            </configuration>
          </execution>
          <!-- -->
          <execution>
            <id>ng e2e</id>
            <phase>integration-test</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run e2e</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
      during the prepare-package phase, copy the dist folder to the
      target/classes folder under the "static" namespace.  This will let the
      maven jar plugin know to package them.  These artifacts will then be
      available to Spring Boot since it defaults to serve content out of
      "classpath:/static"
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy dist</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
              <resources>
                <resource>
                  <directory>${outDir}/ng-app</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Profiles -->
  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <ng.build.arguments>run build</ng.build.arguments>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <ng.build.arguments>run prod</ng.build.arguments>
      </properties>
    </profile>
  </profiles>
</project>
